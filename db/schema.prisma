generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma" // to not worry about foreign ket constrains 
}

model Product {
    id          String           @id @default(cuid())
    name        String
    category    String
    business    String
    description String
    price Int  // in cents
    imageUrl String
    tokenValue  Int
    receipts    ReceiptProduct[]
    @@index([id])
}

model Receipt {
    id        String           @id @default(cuid())
    createdAt DateTime         @default(now())
    userId    String?
    products  ReceiptProduct[]

    @@index([id])
}

model TokensIssued {
    id           String  @id @default(cuid())
    userId       String?
    tokensAmount Int
}

model TokenBalance {
    userId       String @unique
    tokenBalance Int
}

model ReceiptProduct {
    receiptId String
    productId String
    quantity  Int
    createdAt DateTime @default(now())
    // Define foreign keys and references to Receipts and Products
    receipt   Receipt  @relation(fields: [receiptId], references: [id])
    product   Product  @relation(fields: [productId], references: [id])

    @@id([receiptId, productId]) // Ensures uniqueness of receipt and product combination within a receipt
    @@index([receiptId])
    @@index([productId])
}

// model ProductsOnReceipt {
//     receipt   Receipt @relation(fields: [receiptId], references: [id])
//     receiptId String  @unique // relation scalar field (used in the `@relation` attribute above)
//     product   Product @relation(fields: [productId], references: [id])
//     productId String // relation scalar field (used in the `@relation` attribute above)

//     @@index([productId])
// }
